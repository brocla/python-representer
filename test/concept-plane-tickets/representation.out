## BEGIN NORMALIZED CODE ##
import math

placeholder_0 = ["A", "B", "C", "D"]


def placeholder_1(placeholder_2):
    for placeholder_3 in range(placeholder_2):
        yield placeholder_0[placeholder_3 % 4]


def placeholder_4(placeholder_2):
    placeholder_2 = placeholder_2 + 4 if placeholder_2 >= 13 else placeholder_2
    placeholder_5 = placeholder_1(placeholder_2)
    for placeholder_3 in range(placeholder_2):
        placeholder_6 = math.ceil((placeholder_3 + 1) / 4)
        if placeholder_6 != 13:
            yield f"{str(placeholder_6)}{next(placeholder_5)}"


def placeholder_7(placeholder_8):
    placeholder_2 = len(placeholder_8)
    placeholder_9 = {}
    for placeholder_10, placeholder_11 in zip(
        placeholder_8, placeholder_4(placeholder_2)
    ):
        placeholder_9[placeholder_10] = placeholder_11
    return placeholder_9


def placeholder_12(placeholder_13, placeholder_14):
    for placeholder_3 in placeholder_13:
        placeholder_15 = f"{placeholder_3}{placeholder_14}"
        yield (placeholder_15 + "0" * (12 - len(placeholder_15)))

## END NORMALIZED CODE ##

## BEGIN TREE BEFORE ##
Module(
  [
    Expr(
      Constant(
        'Functions to automate Conda airlines ticketing system.',
        lineno=1,
        col_offset=0,
        end_lineno=1,
        end_col_offset=60),
      lineno=1,
      col_offset=0,
      end_lineno=1,
      end_col_offset=60),
    Import(
      [
        alias(
          'math',
          lineno=3,
          col_offset=7,
          end_lineno=3,
          end_col_offset=11)],
      lineno=3,
      col_offset=0,
      end_lineno=3,
      end_col_offset=11),
    Assign(
      [
        Name(
          'SEATS_IN_ROW',
          Store(),
          lineno=5,
          col_offset=0,
          end_lineno=5,
          end_col_offset=12)],
      List(
        [
          Constant(
            'A',
            lineno=5,
            col_offset=16,
            end_lineno=5,
            end_col_offset=19),
          Constant(
            'B',
            lineno=5,
            col_offset=21,
            end_lineno=5,
            end_col_offset=24),
          Constant(
            'C',
            lineno=5,
            col_offset=26,
            end_lineno=5,
            end_col_offset=29),
          Constant(
            'D',
            lineno=5,
            col_offset=31,
            end_lineno=5,
            end_col_offset=34)],
        Load(),
        lineno=5,
        col_offset=15,
        end_lineno=5,
        end_col_offset=35),
      lineno=5,
      col_offset=0,
      end_lineno=5,
      end_col_offset=35),
    FunctionDef(
      'generate_seat_letters',
      arguments(
        [],
        [
          arg(
            'number',
            lineno=8,
            col_offset=26,
            end_lineno=8,
            end_col_offset=32)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Generate a series of letters for airline seats.\n\n    :param number: int - total number of seat letters to be generated.\n    :return: generator - generator that yields seat letters.\n\n    Seat letters are generated from A to D.\n    After D it should start again with A.\n\n    Example: A, B, C, D\n\n    ',
            lineno=9,
            col_offset=4,
            end_lineno=19,
            end_col_offset=7),
          lineno=9,
          col_offset=4,
          end_lineno=19,
          end_col_offset=7),
        For(
          Name(
            'seat',
            Store(),
            lineno=21,
            col_offset=8,
            end_lineno=21,
            end_col_offset=12),
          Call(
            Name(
              'range',
              Load(),
              lineno=21,
              col_offset=16,
              end_lineno=21,
              end_col_offset=21),
            [
              Name(
                'number',
                Load(),
                lineno=21,
                col_offset=22,
                end_lineno=21,
                end_col_offset=28)],
            [],
            lineno=21,
            col_offset=16,
            end_lineno=21,
            end_col_offset=29),
          [
            Expr(
              Yield(
                Subscript(
                  Name(
                    'SEATS_IN_ROW',
                    Load(),
                    lineno=22,
                    col_offset=14,
                    end_lineno=22,
                    end_col_offset=26),
                  BinOp(
                    Name(
                      'seat',
                      Load(),
                      lineno=22,
                      col_offset=27,
                      end_lineno=22,
                      end_col_offset=31),
                    Mod(),
                    Constant(
                      4,
                      lineno=22,
                      col_offset=34,
                      end_lineno=22,
                      end_col_offset=35),
                    lineno=22,
                    col_offset=27,
                    end_lineno=22,
                    end_col_offset=35),
                  Load(),
                  lineno=22,
                  col_offset=14,
                  end_lineno=22,
                  end_col_offset=36),
                lineno=22,
                col_offset=8,
                end_lineno=22,
                end_col_offset=36),
              lineno=22,
              col_offset=8,
              end_lineno=22,
              end_col_offset=36)],
          [],
          lineno=21,
          col_offset=4,
          end_lineno=22,
          end_col_offset=36)],
      [],
      lineno=8,
      col_offset=0,
      end_lineno=22,
      end_col_offset=36),
    FunctionDef(
      'generate_seats',
      arguments(
        [],
        [
          arg(
            'number',
            lineno=25,
            col_offset=19,
            end_lineno=25,
            end_col_offset=25)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Generate a series of identifiers for airline seats.\n\n    :param number: int - total number of seats to be generated.\n    :return: generator - generator that yields seat numbers.\n\n    A seat number consists of the row number and the seat letter.\n\n    There is no row 13.\n    Each row has 4 seats.\n\n    Seats should be sorted from low to high.\n\n    Example: 3C, 3D, 4A, 4B\n\n    ',
            lineno=26,
            col_offset=4,
            end_lineno=40,
            end_col_offset=7),
          lineno=26,
          col_offset=4,
          end_lineno=40,
          end_col_offset=7),
        Assign(
          [
            Name(
              'number',
              Store(),
              lineno=42,
              col_offset=4,
              end_lineno=42,
              end_col_offset=10)],
          IfExp(
            Compare(
              Name(
                'number',
                Load(),
                lineno=42,
                col_offset=27,
                end_lineno=42,
                end_col_offset=33),
              [
                GtE()],
              [
                Constant(
                  13,
                  lineno=42,
                  col_offset=37,
                  end_lineno=42,
                  end_col_offset=39)],
              lineno=42,
              col_offset=27,
              end_lineno=42,
              end_col_offset=39),
            BinOp(
              Name(
                'number',
                Load(),
                lineno=42,
                col_offset=13,
                end_lineno=42,
                end_col_offset=19),
              Add(),
              Constant(
                4,
                lineno=42,
                col_offset=22,
                end_lineno=42,
                end_col_offset=23),
              lineno=42,
              col_offset=13,
              end_lineno=42,
              end_col_offset=23),
            Name(
              'number',
              Load(),
              lineno=42,
              col_offset=45,
              end_lineno=42,
              end_col_offset=51),
            lineno=42,
            col_offset=13,
            end_lineno=42,
            end_col_offset=51),
          lineno=42,
          col_offset=4,
          end_lineno=42,
          end_col_offset=51),
        Assign(
          [
            Name(
              'letters',
              Store(),
              lineno=43,
              col_offset=4,
              end_lineno=43,
              end_col_offset=11)],
          Call(
            Name(
              'generate_seat_letters',
              Load(),
              lineno=43,
              col_offset=14,
              end_lineno=43,
              end_col_offset=35),
            [
              Name(
                'number',
                Load(),
                lineno=43,
                col_offset=36,
                end_lineno=43,
                end_col_offset=42)],
            [],
            lineno=43,
            col_offset=14,
            end_lineno=43,
            end_col_offset=43),
          lineno=43,
          col_offset=4,
          end_lineno=43,
          end_col_offset=43),
        For(
          Name(
            'seat',
            Store(),
            lineno=44,
            col_offset=8,
            end_lineno=44,
            end_col_offset=12),
          Call(
            Name(
              'range',
              Load(),
              lineno=44,
              col_offset=16,
              end_lineno=44,
              end_col_offset=21),
            [
              Name(
                'number',
                Load(),
                lineno=44,
                col_offset=22,
                end_lineno=44,
                end_col_offset=28)],
            [],
            lineno=44,
            col_offset=16,
            end_lineno=44,
            end_col_offset=29),
          [
            Assign(
              [
                Name(
                  'row_number',
                  Store(),
                  lineno=45,
                  col_offset=8,
                  end_lineno=45,
                  end_col_offset=18)],
              Call(
                Attribute(
                  Name(
                    'math',
                    Load(),
                    lineno=45,
                    col_offset=21,
                    end_lineno=45,
                    end_col_offset=25),
                  'ceil',
                  Load(),
                  lineno=45,
                  col_offset=21,
                  end_lineno=45,
                  end_col_offset=30),
                [
                  BinOp(
                    BinOp(
                      Name(
                        'seat',
                        Load(),
                        lineno=45,
                        col_offset=32,
                        end_lineno=45,
                        end_col_offset=36),
                      Add(),
                      Constant(
                        1,
                        lineno=45,
                        col_offset=37,
                        end_lineno=45,
                        end_col_offset=38),
                      lineno=45,
                      col_offset=32,
                      end_lineno=45,
                      end_col_offset=38),
                    Div(),
                    Constant(
                      4,
                      lineno=45,
                      col_offset=42,
                      end_lineno=45,
                      end_col_offset=43),
                    lineno=45,
                    col_offset=31,
                    end_lineno=45,
                    end_col_offset=43)],
                [],
                lineno=45,
                col_offset=21,
                end_lineno=45,
                end_col_offset=44),
              lineno=45,
              col_offset=8,
              end_lineno=45,
              end_col_offset=44),
            If(
              Compare(
                Name(
                  'row_number',
                  Load(),
                  lineno=46,
                  col_offset=11,
                  end_lineno=46,
                  end_col_offset=21),
                [
                  NotEq()],
                [
                  Constant(
                    13,
                    lineno=46,
                    col_offset=25,
                    end_lineno=46,
                    end_col_offset=27)],
                lineno=46,
                col_offset=11,
                end_lineno=46,
                end_col_offset=27),
              [
                Expr(
                  Yield(
                    JoinedStr(
                      [
                        FormattedValue(
                          Call(
                            Name(
                              'str',
                              Load(),
                              lineno=47,
                              col_offset=21,
                              end_lineno=47,
                              end_col_offset=24),
                            [
                              Name(
                                'row_number',
                                Load(),
                                lineno=47,
                                col_offset=25,
                                end_lineno=47,
                                end_col_offset=35)],
                            [],
                            lineno=47,
                            col_offset=21,
                            end_lineno=47,
                            end_col_offset=36),
                          -1,
                          lineno=47,
                          col_offset=18,
                          end_lineno=47,
                          end_col_offset=53),
                        FormattedValue(
                          Call(
                            Name(
                              'next',
                              Load(),
                              lineno=47,
                              col_offset=38,
                              end_lineno=47,
                              end_col_offset=42),
                            [
                              Name(
                                'letters',
                                Load(),
                                lineno=47,
                                col_offset=43,
                                end_lineno=47,
                                end_col_offset=50)],
                            [],
                            lineno=47,
                            col_offset=38,
                            end_lineno=47,
                            end_col_offset=51),
                          -1,
                          lineno=47,
                          col_offset=18,
                          end_lineno=47,
                          end_col_offset=53)],
                      lineno=47,
                      col_offset=18,
                      end_lineno=47,
                      end_col_offset=53),
                    lineno=47,
                    col_offset=12,
                    end_lineno=47,
                    end_col_offset=53),
                  lineno=47,
                  col_offset=12,
                  end_lineno=47,
                  end_col_offset=53)],
              [],
              lineno=46,
              col_offset=8,
              end_lineno=47,
              end_col_offset=53)],
          [],
          lineno=44,
          col_offset=4,
          end_lineno=47,
          end_col_offset=53)],
      [],
      lineno=25,
      col_offset=0,
      end_lineno=47,
      end_col_offset=53),
    FunctionDef(
      'assign_seats',
      arguments(
        [],
        [
          arg(
            'passengers',
            lineno=53,
            col_offset=17,
            end_lineno=53,
            end_col_offset=27)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Assign seats to passengers.\n\n    :param passengers: list[str] - a list of strings containing names of passengers.\n    :return: dict - with the names of the passengers as keys and seat numbers as values.\n\n    Example output: {"Adele": "1A", "Björk": "1B"}\n\n    ',
            lineno=54,
            col_offset=4,
            end_lineno=61,
            end_col_offset=7),
          lineno=54,
          col_offset=4,
          end_lineno=61,
          end_col_offset=7),
        Assign(
          [
            Name(
              'number',
              Store(),
              lineno=63,
              col_offset=4,
              end_lineno=63,
              end_col_offset=10)],
          Call(
            Name(
              'len',
              Load(),
              lineno=63,
              col_offset=13,
              end_lineno=63,
              end_col_offset=16),
            [
              Name(
                'passengers',
                Load(),
                lineno=63,
                col_offset=17,
                end_lineno=63,
                end_col_offset=27)],
            [],
            lineno=63,
            col_offset=13,
            end_lineno=63,
            end_col_offset=28),
          lineno=63,
          col_offset=4,
          end_lineno=63,
          end_col_offset=28),
        Assign(
          [
            Name(
              'output',
              Store(),
              lineno=64,
              col_offset=4,
              end_lineno=64,
              end_col_offset=10)],
          Dict(
            [],
            [],
            lineno=64,
            col_offset=13,
            end_lineno=64,
            end_col_offset=15),
          lineno=64,
          col_offset=4,
          end_lineno=64,
          end_col_offset=15),
        For(
          Tuple(
            [
              Name(
                'passenger',
                Store(),
                lineno=65,
                col_offset=8,
                end_lineno=65,
                end_col_offset=17),
              Name(
                'seat_number',
                Store(),
                lineno=65,
                col_offset=19,
                end_lineno=65,
                end_col_offset=30)],
            Store(),
            lineno=65,
            col_offset=8,
            end_lineno=65,
            end_col_offset=30),
          Call(
            Name(
              'zip',
              Load(),
              lineno=65,
              col_offset=34,
              end_lineno=65,
              end_col_offset=37),
            [
              Name(
                'passengers',
                Load(),
                lineno=65,
                col_offset=38,
                end_lineno=65,
                end_col_offset=48),
              Call(
                Name(
                  'generate_seats',
                  Load(),
                  lineno=65,
                  col_offset=50,
                  end_lineno=65,
                  end_col_offset=64),
                [
                  Name(
                    'number',
                    Load(),
                    lineno=65,
                    col_offset=65,
                    end_lineno=65,
                    end_col_offset=71)],
                [],
                lineno=65,
                col_offset=50,
                end_lineno=65,
                end_col_offset=72)],
            [],
            lineno=65,
            col_offset=34,
            end_lineno=65,
            end_col_offset=73),
          [
            Assign(
              [
                Subscript(
                  Name(
                    'output',
                    Load(),
                    lineno=66,
                    col_offset=8,
                    end_lineno=66,
                    end_col_offset=14),
                  Name(
                    'passenger',
                    Load(),
                    lineno=66,
                    col_offset=15,
                    end_lineno=66,
                    end_col_offset=24),
                  Store(),
                  lineno=66,
                  col_offset=8,
                  end_lineno=66,
                  end_col_offset=25)],
              Name(
                'seat_number',
                Load(),
                lineno=66,
                col_offset=28,
                end_lineno=66,
                end_col_offset=39),
              lineno=66,
              col_offset=8,
              end_lineno=66,
              end_col_offset=39)],
          [],
          lineno=65,
          col_offset=4,
          end_lineno=66,
          end_col_offset=39),
        Return(
          Name(
            'output',
            Load(),
            lineno=67,
            col_offset=11,
            end_lineno=67,
            end_col_offset=17),
          lineno=67,
          col_offset=4,
          end_lineno=67,
          end_col_offset=17)],
      [],
      lineno=53,
      col_offset=0,
      end_lineno=67,
      end_col_offset=17),
    FunctionDef(
      'generate_codes',
      arguments(
        [],
        [
          arg(
            'seat_numbers',
            lineno=69,
            col_offset=19,
            end_lineno=69,
            end_col_offset=31),
          arg(
            'flight_id',
            lineno=69,
            col_offset=33,
            end_lineno=69,
            end_col_offset=42)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Expr(
          Constant(
            'Generate codes for a ticket.\n\n    :param seat_numbers: list[str] - list of seat numbers.\n    :param flight_id: str - string containing the flight identifier.\n    :return: generator - generator that yields 12 character long ticket codes.\n\n    ',
            lineno=70,
            col_offset=4,
            end_lineno=76,
            end_col_offset=7),
          lineno=70,
          col_offset=4,
          end_lineno=76,
          end_col_offset=7),
        For(
          Name(
            'seat',
            Store(),
            lineno=78,
            col_offset=8,
            end_lineno=78,
            end_col_offset=12),
          Name(
            'seat_numbers',
            Load(),
            lineno=78,
            col_offset=16,
            end_lineno=78,
            end_col_offset=28),
          [
            Assign(
              [
                Name(
                  'base_string',
                  Store(),
                  lineno=79,
                  col_offset=8,
                  end_lineno=79,
                  end_col_offset=19)],
              JoinedStr(
                [
                  FormattedValue(
                    Name(
                      'seat',
                      Load(),
                      lineno=79,
                      col_offset=25,
                      end_lineno=79,
                      end_col_offset=29),
                    -1,
                    lineno=79,
                    col_offset=22,
                    end_lineno=79,
                    end_col_offset=42),
                  FormattedValue(
                    Name(
                      'flight_id',
                      Load(),
                      lineno=79,
                      col_offset=31,
                      end_lineno=79,
                      end_col_offset=40),
                    -1,
                    lineno=79,
                    col_offset=22,
                    end_lineno=79,
                    end_col_offset=42)],
                lineno=79,
                col_offset=22,
                end_lineno=79,
                end_col_offset=42),
              lineno=79,
              col_offset=8,
              end_lineno=79,
              end_col_offset=42),
            Expr(
              Yield(
                BinOp(
                  Name(
                    'base_string',
                    Load(),
                    lineno=80,
                    col_offset=14,
                    end_lineno=80,
                    end_col_offset=25),
                  Add(),
                  BinOp(
                    Constant(
                      '0',
                      lineno=80,
                      col_offset=28,
                      end_lineno=80,
                      end_col_offset=31),
                    Mult(),
                    BinOp(
                      Constant(
                        12,
                        lineno=80,
                        col_offset=35,
                        end_lineno=80,
                        end_col_offset=37),
                      Sub(),
                      Call(
                        Name(
                          'len',
                          Load(),
                          lineno=80,
                          col_offset=40,
                          end_lineno=80,
                          end_col_offset=43),
                        [
                          Name(
                            'base_string',
                            Load(),
                            lineno=80,
                            col_offset=44,
                            end_lineno=80,
                            end_col_offset=55)],
                        [],
                        lineno=80,
                        col_offset=40,
                        end_lineno=80,
                        end_col_offset=56),
                      lineno=80,
                      col_offset=35,
                      end_lineno=80,
                      end_col_offset=56),
                    lineno=80,
                    col_offset=28,
                    end_lineno=80,
                    end_col_offset=57),
                  lineno=80,
                  col_offset=14,
                  end_lineno=80,
                  end_col_offset=57),
                lineno=80,
                col_offset=8,
                end_lineno=80,
                end_col_offset=57),
              lineno=80,
              col_offset=8,
              end_lineno=80,
              end_col_offset=57)],
          [],
          lineno=78,
          col_offset=4,
          end_lineno=80,
          end_col_offset=57)],
      [],
      lineno=69,
      col_offset=0,
      end_lineno=80,
      end_col_offset=57)],
  [])
## END TREE BEFORE ##

## BEGIN NORMALIZED TREE ##
Module(
  [
    Import(
      [
        alias(
          'math',
          lineno=3,
          col_offset=7,
          end_lineno=3,
          end_col_offset=11)],
      lineno=3,
      col_offset=0,
      end_lineno=3,
      end_col_offset=11),
    Assign(
      [
        Name(
          'placeholder_0',
          Store(),
          lineno=5,
          col_offset=0,
          end_lineno=5,
          end_col_offset=12)],
      List(
        [
          Constant(
            'A',
            lineno=5,
            col_offset=16,
            end_lineno=5,
            end_col_offset=19),
          Constant(
            'B',
            lineno=5,
            col_offset=21,
            end_lineno=5,
            end_col_offset=24),
          Constant(
            'C',
            lineno=5,
            col_offset=26,
            end_lineno=5,
            end_col_offset=29),
          Constant(
            'D',
            lineno=5,
            col_offset=31,
            end_lineno=5,
            end_col_offset=34)],
        Load(),
        lineno=5,
        col_offset=15,
        end_lineno=5,
        end_col_offset=35),
      lineno=5,
      col_offset=0,
      end_lineno=5,
      end_col_offset=35),
    FunctionDef(
      'placeholder_1',
      arguments(
        [],
        [
          arg(
            'placeholder_2',
            lineno=8,
            col_offset=26,
            end_lineno=8,
            end_col_offset=32)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        For(
          Name(
            'placeholder_3',
            Store(),
            lineno=21,
            col_offset=8,
            end_lineno=21,
            end_col_offset=12),
          Call(
            Name(
              'range',
              Load(),
              lineno=21,
              col_offset=16,
              end_lineno=21,
              end_col_offset=21),
            [
              Name(
                'placeholder_2',
                Load(),
                lineno=21,
                col_offset=22,
                end_lineno=21,
                end_col_offset=28)],
            [],
            lineno=21,
            col_offset=16,
            end_lineno=21,
            end_col_offset=29),
          [
            Expr(
              Yield(
                Subscript(
                  Name(
                    'placeholder_0',
                    Load(),
                    lineno=22,
                    col_offset=14,
                    end_lineno=22,
                    end_col_offset=26),
                  BinOp(
                    Name(
                      'placeholder_3',
                      Load(),
                      lineno=22,
                      col_offset=27,
                      end_lineno=22,
                      end_col_offset=31),
                    Mod(),
                    Constant(
                      4,
                      lineno=22,
                      col_offset=34,
                      end_lineno=22,
                      end_col_offset=35),
                    lineno=22,
                    col_offset=27,
                    end_lineno=22,
                    end_col_offset=35),
                  Load(),
                  lineno=22,
                  col_offset=14,
                  end_lineno=22,
                  end_col_offset=36),
                lineno=22,
                col_offset=8,
                end_lineno=22,
                end_col_offset=36),
              lineno=22,
              col_offset=8,
              end_lineno=22,
              end_col_offset=36)],
          [],
          lineno=21,
          col_offset=4,
          end_lineno=22,
          end_col_offset=36)],
      [],
      lineno=8,
      col_offset=0,
      end_lineno=22,
      end_col_offset=36),
    FunctionDef(
      'placeholder_4',
      arguments(
        [],
        [
          arg(
            'placeholder_2',
            lineno=25,
            col_offset=19,
            end_lineno=25,
            end_col_offset=25)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_2',
              Store(),
              lineno=42,
              col_offset=4,
              end_lineno=42,
              end_col_offset=10)],
          IfExp(
            Compare(
              Name(
                'placeholder_2',
                Load(),
                lineno=42,
                col_offset=27,
                end_lineno=42,
                end_col_offset=33),
              [
                GtE()],
              [
                Constant(
                  13,
                  lineno=42,
                  col_offset=37,
                  end_lineno=42,
                  end_col_offset=39)],
              lineno=42,
              col_offset=27,
              end_lineno=42,
              end_col_offset=39),
            BinOp(
              Name(
                'placeholder_2',
                Load(),
                lineno=42,
                col_offset=13,
                end_lineno=42,
                end_col_offset=19),
              Add(),
              Constant(
                4,
                lineno=42,
                col_offset=22,
                end_lineno=42,
                end_col_offset=23),
              lineno=42,
              col_offset=13,
              end_lineno=42,
              end_col_offset=23),
            Name(
              'placeholder_2',
              Load(),
              lineno=42,
              col_offset=45,
              end_lineno=42,
              end_col_offset=51),
            lineno=42,
            col_offset=13,
            end_lineno=42,
            end_col_offset=51),
          lineno=42,
          col_offset=4,
          end_lineno=42,
          end_col_offset=51),
        Assign(
          [
            Name(
              'placeholder_5',
              Store(),
              lineno=43,
              col_offset=4,
              end_lineno=43,
              end_col_offset=11)],
          Call(
            Name(
              'placeholder_1',
              Load(),
              lineno=43,
              col_offset=14,
              end_lineno=43,
              end_col_offset=35),
            [
              Name(
                'placeholder_2',
                Load(),
                lineno=43,
                col_offset=36,
                end_lineno=43,
                end_col_offset=42)],
            [],
            lineno=43,
            col_offset=14,
            end_lineno=43,
            end_col_offset=43),
          lineno=43,
          col_offset=4,
          end_lineno=43,
          end_col_offset=43),
        For(
          Name(
            'placeholder_3',
            Store(),
            lineno=44,
            col_offset=8,
            end_lineno=44,
            end_col_offset=12),
          Call(
            Name(
              'range',
              Load(),
              lineno=44,
              col_offset=16,
              end_lineno=44,
              end_col_offset=21),
            [
              Name(
                'placeholder_2',
                Load(),
                lineno=44,
                col_offset=22,
                end_lineno=44,
                end_col_offset=28)],
            [],
            lineno=44,
            col_offset=16,
            end_lineno=44,
            end_col_offset=29),
          [
            Assign(
              [
                Name(
                  'placeholder_6',
                  Store(),
                  lineno=45,
                  col_offset=8,
                  end_lineno=45,
                  end_col_offset=18)],
              Call(
                Attribute(
                  Name(
                    'math',
                    Load(),
                    lineno=45,
                    col_offset=21,
                    end_lineno=45,
                    end_col_offset=25),
                  'ceil',
                  Load(),
                  lineno=45,
                  col_offset=21,
                  end_lineno=45,
                  end_col_offset=30),
                [
                  BinOp(
                    BinOp(
                      Name(
                        'placeholder_3',
                        Load(),
                        lineno=45,
                        col_offset=32,
                        end_lineno=45,
                        end_col_offset=36),
                      Add(),
                      Constant(
                        1,
                        lineno=45,
                        col_offset=37,
                        end_lineno=45,
                        end_col_offset=38),
                      lineno=45,
                      col_offset=32,
                      end_lineno=45,
                      end_col_offset=38),
                    Div(),
                    Constant(
                      4,
                      lineno=45,
                      col_offset=42,
                      end_lineno=45,
                      end_col_offset=43),
                    lineno=45,
                    col_offset=31,
                    end_lineno=45,
                    end_col_offset=43)],
                [],
                lineno=45,
                col_offset=21,
                end_lineno=45,
                end_col_offset=44),
              lineno=45,
              col_offset=8,
              end_lineno=45,
              end_col_offset=44),
            If(
              Compare(
                Name(
                  'placeholder_6',
                  Load(),
                  lineno=46,
                  col_offset=11,
                  end_lineno=46,
                  end_col_offset=21),
                [
                  NotEq()],
                [
                  Constant(
                    13,
                    lineno=46,
                    col_offset=25,
                    end_lineno=46,
                    end_col_offset=27)],
                lineno=46,
                col_offset=11,
                end_lineno=46,
                end_col_offset=27),
              [
                Expr(
                  Yield(
                    JoinedStr(
                      [
                        FormattedValue(
                          Call(
                            Name(
                              'str',
                              Load(),
                              lineno=47,
                              col_offset=21,
                              end_lineno=47,
                              end_col_offset=24),
                            [
                              Name(
                                'placeholder_6',
                                Load(),
                                lineno=47,
                                col_offset=25,
                                end_lineno=47,
                                end_col_offset=35)],
                            [],
                            lineno=47,
                            col_offset=21,
                            end_lineno=47,
                            end_col_offset=36),
                          -1,
                          lineno=47,
                          col_offset=18,
                          end_lineno=47,
                          end_col_offset=53),
                        FormattedValue(
                          Call(
                            Name(
                              'next',
                              Load(),
                              lineno=47,
                              col_offset=38,
                              end_lineno=47,
                              end_col_offset=42),
                            [
                              Name(
                                'placeholder_5',
                                Load(),
                                lineno=47,
                                col_offset=43,
                                end_lineno=47,
                                end_col_offset=50)],
                            [],
                            lineno=47,
                            col_offset=38,
                            end_lineno=47,
                            end_col_offset=51),
                          -1,
                          lineno=47,
                          col_offset=18,
                          end_lineno=47,
                          end_col_offset=53)],
                      lineno=47,
                      col_offset=18,
                      end_lineno=47,
                      end_col_offset=53),
                    lineno=47,
                    col_offset=12,
                    end_lineno=47,
                    end_col_offset=53),
                  lineno=47,
                  col_offset=12,
                  end_lineno=47,
                  end_col_offset=53)],
              [],
              lineno=46,
              col_offset=8,
              end_lineno=47,
              end_col_offset=53)],
          [],
          lineno=44,
          col_offset=4,
          end_lineno=47,
          end_col_offset=53)],
      [],
      lineno=25,
      col_offset=0,
      end_lineno=47,
      end_col_offset=53),
    FunctionDef(
      'placeholder_7',
      arguments(
        [],
        [
          arg(
            'placeholder_8',
            lineno=53,
            col_offset=17,
            end_lineno=53,
            end_col_offset=27)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        Assign(
          [
            Name(
              'placeholder_2',
              Store(),
              lineno=63,
              col_offset=4,
              end_lineno=63,
              end_col_offset=10)],
          Call(
            Name(
              'len',
              Load(),
              lineno=63,
              col_offset=13,
              end_lineno=63,
              end_col_offset=16),
            [
              Name(
                'placeholder_8',
                Load(),
                lineno=63,
                col_offset=17,
                end_lineno=63,
                end_col_offset=27)],
            [],
            lineno=63,
            col_offset=13,
            end_lineno=63,
            end_col_offset=28),
          lineno=63,
          col_offset=4,
          end_lineno=63,
          end_col_offset=28),
        Assign(
          [
            Name(
              'placeholder_9',
              Store(),
              lineno=64,
              col_offset=4,
              end_lineno=64,
              end_col_offset=10)],
          Dict(
            [],
            [],
            lineno=64,
            col_offset=13,
            end_lineno=64,
            end_col_offset=15),
          lineno=64,
          col_offset=4,
          end_lineno=64,
          end_col_offset=15),
        For(
          Tuple(
            [
              Name(
                'placeholder_10',
                Store(),
                lineno=65,
                col_offset=8,
                end_lineno=65,
                end_col_offset=17),
              Name(
                'placeholder_11',
                Store(),
                lineno=65,
                col_offset=19,
                end_lineno=65,
                end_col_offset=30)],
            Store(),
            lineno=65,
            col_offset=8,
            end_lineno=65,
            end_col_offset=30),
          Call(
            Name(
              'zip',
              Load(),
              lineno=65,
              col_offset=34,
              end_lineno=65,
              end_col_offset=37),
            [
              Name(
                'placeholder_8',
                Load(),
                lineno=65,
                col_offset=38,
                end_lineno=65,
                end_col_offset=48),
              Call(
                Name(
                  'placeholder_4',
                  Load(),
                  lineno=65,
                  col_offset=50,
                  end_lineno=65,
                  end_col_offset=64),
                [
                  Name(
                    'placeholder_2',
                    Load(),
                    lineno=65,
                    col_offset=65,
                    end_lineno=65,
                    end_col_offset=71)],
                [],
                lineno=65,
                col_offset=50,
                end_lineno=65,
                end_col_offset=72)],
            [],
            lineno=65,
            col_offset=34,
            end_lineno=65,
            end_col_offset=73),
          [
            Assign(
              [
                Subscript(
                  Name(
                    'placeholder_9',
                    Load(),
                    lineno=66,
                    col_offset=8,
                    end_lineno=66,
                    end_col_offset=14),
                  Name(
                    'placeholder_10',
                    Load(),
                    lineno=66,
                    col_offset=15,
                    end_lineno=66,
                    end_col_offset=24),
                  Store(),
                  lineno=66,
                  col_offset=8,
                  end_lineno=66,
                  end_col_offset=25)],
              Name(
                'placeholder_11',
                Load(),
                lineno=66,
                col_offset=28,
                end_lineno=66,
                end_col_offset=39),
              lineno=66,
              col_offset=8,
              end_lineno=66,
              end_col_offset=39)],
          [],
          lineno=65,
          col_offset=4,
          end_lineno=66,
          end_col_offset=39),
        Return(
          Name(
            'placeholder_9',
            Load(),
            lineno=67,
            col_offset=11,
            end_lineno=67,
            end_col_offset=17),
          lineno=67,
          col_offset=4,
          end_lineno=67,
          end_col_offset=17)],
      [],
      lineno=53,
      col_offset=0,
      end_lineno=67,
      end_col_offset=17),
    FunctionDef(
      'placeholder_12',
      arguments(
        [],
        [
          arg(
            'placeholder_13',
            lineno=69,
            col_offset=19,
            end_lineno=69,
            end_col_offset=31),
          arg(
            'placeholder_14',
            lineno=69,
            col_offset=33,
            end_lineno=69,
            end_col_offset=42)],
        kwonlyargs=[],
        kw_defaults=[],
        defaults=[]),
      [
        For(
          Name(
            'placeholder_3',
            Store(),
            lineno=78,
            col_offset=8,
            end_lineno=78,
            end_col_offset=12),
          Name(
            'placeholder_13',
            Load(),
            lineno=78,
            col_offset=16,
            end_lineno=78,
            end_col_offset=28),
          [
            Assign(
              [
                Name(
                  'placeholder_15',
                  Store(),
                  lineno=79,
                  col_offset=8,
                  end_lineno=79,
                  end_col_offset=19)],
              JoinedStr(
                [
                  FormattedValue(
                    Name(
                      'placeholder_3',
                      Load(),
                      lineno=79,
                      col_offset=25,
                      end_lineno=79,
                      end_col_offset=29),
                    -1,
                    lineno=79,
                    col_offset=22,
                    end_lineno=79,
                    end_col_offset=42),
                  FormattedValue(
                    Name(
                      'placeholder_14',
                      Load(),
                      lineno=79,
                      col_offset=31,
                      end_lineno=79,
                      end_col_offset=40),
                    -1,
                    lineno=79,
                    col_offset=22,
                    end_lineno=79,
                    end_col_offset=42)],
                lineno=79,
                col_offset=22,
                end_lineno=79,
                end_col_offset=42),
              lineno=79,
              col_offset=8,
              end_lineno=79,
              end_col_offset=42),
            Expr(
              Yield(
                BinOp(
                  Name(
                    'placeholder_15',
                    Load(),
                    lineno=80,
                    col_offset=14,
                    end_lineno=80,
                    end_col_offset=25),
                  Add(),
                  BinOp(
                    Constant(
                      '0',
                      lineno=80,
                      col_offset=28,
                      end_lineno=80,
                      end_col_offset=31),
                    Mult(),
                    BinOp(
                      Constant(
                        12,
                        lineno=80,
                        col_offset=35,
                        end_lineno=80,
                        end_col_offset=37),
                      Sub(),
                      Call(
                        Name(
                          'len',
                          Load(),
                          lineno=80,
                          col_offset=40,
                          end_lineno=80,
                          end_col_offset=43),
                        [
                          Name(
                            'placeholder_15',
                            Load(),
                            lineno=80,
                            col_offset=44,
                            end_lineno=80,
                            end_col_offset=55)],
                        [],
                        lineno=80,
                        col_offset=40,
                        end_lineno=80,
                        end_col_offset=56),
                      lineno=80,
                      col_offset=35,
                      end_lineno=80,
                      end_col_offset=56),
                    lineno=80,
                    col_offset=28,
                    end_lineno=80,
                    end_col_offset=57),
                  lineno=80,
                  col_offset=14,
                  end_lineno=80,
                  end_col_offset=57),
                lineno=80,
                col_offset=8,
                end_lineno=80,
                end_col_offset=57),
              lineno=80,
              col_offset=8,
              end_lineno=80,
              end_col_offset=57)],
          [],
          lineno=78,
          col_offset=4,
          end_lineno=80,
          end_col_offset=57)],
      [],
      lineno=69,
      col_offset=0,
      end_lineno=80,
      end_col_offset=57)],
  [])
## END NORMALIZED TREE ##